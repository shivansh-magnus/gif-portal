{"ast":null,"code":"import _classCallCheck from \"/Users/shivanshdwivedi/Desktop/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/shivanshdwivedi/Desktop/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport camelCase from \"camelcase\";\nimport * as borsh from \"@project-serum/borsh\";\nimport { IdlError } from \"../error\";\nexport var IdlCoder = /*#__PURE__*/function () {\n  function IdlCoder() {\n    _classCallCheck(this, IdlCoder);\n  }\n\n  _createClass(IdlCoder, null, [{\n    key: \"fieldLayout\",\n    value: function fieldLayout(field, types) {\n      var fieldName = field.name !== undefined ? camelCase(field.name) : undefined;\n\n      switch (field.type) {\n        case \"bool\":\n          {\n            return borsh.bool(fieldName);\n          }\n\n        case \"u8\":\n          {\n            return borsh.u8(fieldName);\n          }\n\n        case \"i8\":\n          {\n            return borsh.i8(fieldName);\n          }\n\n        case \"u16\":\n          {\n            return borsh.u16(fieldName);\n          }\n\n        case \"i16\":\n          {\n            return borsh.i16(fieldName);\n          }\n\n        case \"u32\":\n          {\n            return borsh.u32(fieldName);\n          }\n\n        case \"i32\":\n          {\n            return borsh.i32(fieldName);\n          }\n\n        case \"u64\":\n          {\n            return borsh.u64(fieldName);\n          }\n\n        case \"i64\":\n          {\n            return borsh.i64(fieldName);\n          }\n\n        case \"u128\":\n          {\n            return borsh.u128(fieldName);\n          }\n\n        case \"i128\":\n          {\n            return borsh.i128(fieldName);\n          }\n\n        case \"bytes\":\n          {\n            return borsh.vecU8(fieldName);\n          }\n\n        case \"string\":\n          {\n            return borsh.str(fieldName);\n          }\n\n        case \"publicKey\":\n          {\n            return borsh.publicKey(fieldName);\n          }\n\n        default:\n          {\n            if (\"vec\" in field.type) {\n              return borsh.vec(IdlCoder.fieldLayout({\n                name: undefined,\n                // @ts-ignore\n                type: field.type.vec\n              }, types), fieldName);\n            } else if (\"option\" in field.type) {\n              return borsh.option(IdlCoder.fieldLayout({\n                name: undefined,\n                type: field.type.option\n              }, types), fieldName);\n            } else if (\"defined\" in field.type) {\n              var defined = field.type.defined; // User defined type.\n\n              if (types === undefined) {\n                throw new IdlError(\"User defined types not provided\");\n              }\n\n              var filtered = types.filter(function (t) {\n                return t.name === defined;\n              });\n\n              if (filtered.length !== 1) {\n                throw new IdlError(\"Type not found: \".concat(JSON.stringify(field)));\n              }\n\n              return IdlCoder.typeDefLayout(filtered[0], types, fieldName);\n            } else if (\"array\" in field.type) {\n              var arrayTy = field.type.array[0];\n              var arrayLen = field.type.array[1];\n              var innerLayout = IdlCoder.fieldLayout({\n                name: undefined,\n                type: arrayTy\n              }, types);\n              return borsh.array(innerLayout, arrayLen, fieldName);\n            } else {\n              throw new Error(\"Not yet implemented: \".concat(field));\n            }\n          }\n      }\n    }\n  }, {\n    key: \"typeDefLayout\",\n    value: function typeDefLayout(typeDef) {\n      var types = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var name = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (typeDef.type.kind === \"struct\") {\n        var fieldLayouts = typeDef.type.fields.map(function (field) {\n          var x = IdlCoder.fieldLayout(field, types);\n          return x;\n        });\n        return borsh.struct(fieldLayouts, name);\n      } else if (typeDef.type.kind === \"enum\") {\n        var variants = typeDef.type.variants.map(function (variant) {\n          var name = camelCase(variant.name);\n\n          if (variant.fields === undefined) {\n            return borsh.struct([], name);\n          } // @ts-ignore\n\n\n          var fieldLayouts = variant.fields.map(function (f) {\n            // @ts-ignore\n            if (f.name === undefined) {\n              throw new Error(\"Tuple enum variants not yet implemented.\");\n            } // @ts-ignore\n\n\n            return IdlCoder.fieldLayout(f, types);\n          });\n          return borsh.struct(fieldLayouts, name);\n        });\n\n        if (name !== undefined) {\n          // Buffer-layout lib requires the name to be null (on construction)\n          // when used as a field.\n          return borsh.rustEnum(variants).replicate(name);\n        }\n\n        return borsh.rustEnum(variants, name);\n      } else {\n        throw new Error(\"Unknown type kint: \".concat(typeDef));\n      }\n    }\n  }]);\n\n  return IdlCoder;\n}();","map":{"version":3,"mappings":"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","names":["camelCase","borsh","IdlError","IdlCoder","field","types","fieldName","name","undefined","type","bool","u8","i8","u16","i16","u32","i32","u64","i64","u128","i128","vecU8","str","publicKey","vec","fieldLayout","option","defined","filtered","filter","t","length","JSON","stringify","typeDefLayout","arrayTy","array","arrayLen","innerLayout","Error","typeDef","kind","fieldLayouts","fields","map","x","struct","variants","variant","f","rustEnum","replicate"],"sourceRoot":"","sources":["../../../src/coder/idl.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}